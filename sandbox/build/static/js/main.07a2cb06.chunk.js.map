{"version":3,"sources":["demo/config_simple.tsx","demo/init_value.js","demo/demo.tsx","index.tsx"],"names":["InitialConfig","AntdWidgets","FieldSelect","FieldDropdown","FieldCascader","FieldTreeSelect","AntdConfig","fields","user","label","tooltip","type","subfields","firstName","label2","excludeOperators","mainWidgetProps","valueLabel","valuePlaceholder","fieldSettings","validateValue","val","length","login","match","num","preferWidgets","min","max","slider","valueSources","step","marks","0","100","widgets","widgetProps","date","time","operators","defaultOperator","datetime","datetime2","color","listValues","value","title","color2","yellow","green","orange","purple","multicolor","allowCustomValues","selecttree","treeExpandAll","children","multiselecttree","stock","defaultValue","labelYes","labelNo","conjunctions","AND","OR","between","textSeparators","customProps","width","rangeslider","dateFormat","valueFormat","timeFormat","treeselect","showSearch","types","boolean","merge","hideOperator","operatorInlineLabel","localeSettings","locale","moment","antd","ru_RU","material","ruRU","fieldLabel","operatorLabel","fieldPlaceholder","operatorPlaceholder","deleteLabel","addGroupLabel","addRuleLabel","delGroupLabel","notLabel","valueSourcesPopupTitle","removeRuleConfirmOptions","okText","okType","removeGroupConfirmOptions","config","settings","valueSourcesInfo","field","widget","func","maxNesting","canLeaveEmptyGroup","funcs","stringify","JSON","jsonLogicFormat","Utils","queryBuilderFormat","queryString","mongodbFormat","sqlFormat","getTree","checkTree","loadTree","uuid","preStyle","loadFromJsonLogic","backgroundColor","margin","padding","preErrorStyle","emptyInitValue","initValue","loadedInitValue","Object","keys","initTree","loadedConfig","DemoQueryBuilder","immutableTree","state","tree","render","onChange","renderBuilder","onClick","resetValue","clearValue","className","renderResult","setState","props","style","updateResult","logic","data","errors","throttle","undefined","href","target","rel","Component","App","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.07a2cb06.chunk.js","sourcesContent":["/*eslint @typescript-eslint/no-unused-vars: [\"off\", {\"varsIgnorePattern\": \"^_\"}]*/\r\nimport React from \"react\";\r\nimport merge from \"lodash/merge\";\r\nimport {\r\n  BasicConfig,\r\n  // types:\r\n  Operators, Widgets, Fields, Config, Types, Conjunctions, Settings, LocaleSettings, Funcs,\r\n} from \"react-awesome-query-builder\";\r\nimport ru_RU from \"antd/lib/locale-provider/ru_RU\";\r\nimport { ruRU } from \"@material-ui/core/locale\";\r\nimport AntdConfig from \"react-awesome-query-builder/lib/config/antd\";\r\nimport AntdWidgets from \"react-awesome-query-builder/lib/components/widgets/antd\";\r\n//import MaterialConfig from \"react-awesome-query-builder/lib/config/material\";\r\nconst {\r\n  FieldSelect,\r\n  FieldDropdown,\r\n  FieldCascader,\r\n  FieldTreeSelect,\r\n} = AntdWidgets;\r\n\r\nconst InitialConfig = AntdConfig; // or BasicConfig or MaterialConfig\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nconst fields: Fields = {\r\n  user: {\r\n    label: \"User\",\r\n    tooltip: \"Group of fields\",\r\n    type: \"!struct\",\r\n    subfields: {\r\n      firstName: {\r\n        label2: \"Username\", //only for menu's toggler\r\n        type: \"text\",\r\n        excludeOperators: [\"proximity\"],\r\n        mainWidgetProps: {\r\n          valueLabel: \"Name\",\r\n          valuePlaceholder: \"Enter name\",\r\n        },\r\n        fieldSettings: {\r\n          validateValue: (val, fieldSettings) => {\r\n            return (val.length < 10);\r\n          },\r\n        },\r\n      },\r\n      login: {\r\n        type: \"text\",\r\n        excludeOperators: [\"proximity\"],\r\n        fieldSettings: {\r\n          validateValue: (val, fieldSettings) => {\r\n            return (val.length < 10 && (val === \"\" || val.match(/^[A-Za-z0-9_-]+$/) !== null));\r\n          },\r\n        },\r\n        mainWidgetProps: {\r\n          valueLabel: \"Login\",\r\n          valuePlaceholder: \"Enter login\",\r\n        },\r\n      }\r\n    }\r\n  },\r\n  num: {\r\n    label: \"Number\",\r\n    type: \"number\",\r\n    preferWidgets: [\"number\"],\r\n    fieldSettings: {\r\n      min: -1,\r\n      max: 5\r\n    },\r\n  },\r\n  slider: {\r\n    label: \"Slider\",\r\n    type: \"number\",\r\n    preferWidgets: [\"slider\", \"rangeslider\"],\r\n    valueSources: [\"value\", \"field\"],\r\n    fieldSettings: {\r\n      min: 0,\r\n      max: 100,\r\n      step: 1,\r\n      marks: {\r\n        0: <strong>0%</strong>,\r\n        100: <strong>100%</strong>\r\n      },\r\n    },\r\n    //overrides\r\n    widgets: {\r\n      slider: {\r\n        widgetProps: {\r\n          valuePlaceholder: \"..Slider\",\r\n        }\r\n      }\r\n    },\r\n  },\r\n  date: {\r\n    label: \"Date\",\r\n    type: \"date\",\r\n    valueSources: [\"value\"],\r\n  },\r\n  time: {\r\n    label: \"Time\",\r\n    type: \"time\",\r\n    valueSources: [\"value\"],\r\n    operators: [\"greater_or_equal\", \"less_or_equal\", \"between\"],\r\n    defaultOperator: \"between\",\r\n  },\r\n  datetime: {\r\n    label: \"DateTime\",\r\n    type: \"datetime\",\r\n    valueSources: [\"value\"]\r\n  },\r\n  datetime2: {\r\n    label: \"DateTime2\",\r\n    type: \"datetime\",\r\n    valueSources: [\"field\"]\r\n  },\r\n  color: {\r\n    label: \"Color\",\r\n    type: \"select\",\r\n    valueSources: [\"value\"],\r\n    fieldSettings: {\r\n      listValues: [\r\n        { value: \"yellow\", title: \"Yellow\" },\r\n        { value: \"green\", title: \"Green\" },\r\n        { value: \"orange\", title: \"Orange\" }\r\n      ],\r\n    }\r\n  },\r\n  color2: {\r\n    label: \"Color2\",\r\n    type: \"select\",\r\n    fieldSettings: {\r\n      listValues: {\r\n        yellow: \"Yellow\",\r\n        green: \"Green\",\r\n        orange: \"Orange\",\r\n        purple: \"Purple\"\r\n      },\r\n    }\r\n  },\r\n  multicolor: {\r\n    label: \"Colors\",\r\n    type: \"multiselect\",\r\n    fieldSettings: {\r\n      listValues: {\r\n        yellow: \"Yellow\",\r\n        green: \"Green\",\r\n        orange: \"Orange\"\r\n      },\r\n      allowCustomValues: true\r\n    },\r\n  },\r\n  selecttree: {\r\n    label: \"Color (tree)\",\r\n    type: \"treeselect\",\r\n    fieldSettings: {\r\n      treeExpandAll: true,\r\n      listValues: [\r\n        { value: \"1\", title: \"Warm colors\", children: [\r\n          { value: \"2\", title: \"Red\" }, \r\n          { value: \"3\", title: \"Orange\" }\r\n        ] },\r\n        { value: \"4\", title: \"Cool colors\", children: [\r\n          { value: \"5\", title: \"Green\" }, \r\n          { value: \"6\", title: \"Blue\", children: [\r\n            { value: \"7\", title: \"Sub blue\", children: [\r\n              { value: \"8\", title: \"Sub sub blue and a long text\" }\r\n            ] }\r\n          ] }\r\n        ] }\r\n      ],\r\n    }\r\n  },\r\n  multiselecttree: {\r\n    label: \"Colors (tree)\",\r\n    type: \"treemultiselect\",\r\n    fieldSettings: {\r\n      treeExpandAll: true,\r\n      listValues: [\r\n        { value: \"1\", title: \"Warm colors\", children: [\r\n          { value: \"2\", title: \"Red\" }, \r\n          { value: \"3\", title: \"Orange\" }\r\n        ] },\r\n        { value: \"4\", title: \"Cool colors\", children: [\r\n          { value: \"5\", title: \"Green\" }, \r\n          { value: \"6\", title: \"Blue\", children: [\r\n            { value: \"7\", title: \"Sub blue\", children: [\r\n              { value: \"8\", title: \"Sub sub blue and a long text\" }\r\n            ] }\r\n          ] }\r\n        ] }\r\n      ]\r\n    }\r\n  },\r\n  stock: {\r\n    label: \"In stock\",\r\n    type: \"boolean\",\r\n    defaultValue: true,\r\n    mainWidgetProps: {\r\n      labelYes: \"+\",\r\n      labelNo: \"-\"\r\n    }\r\n  },\r\n};\r\n\r\n\r\n//////////////////////////////////////////////////////////////////////\r\n\r\nconst conjunctions: Conjunctions = {\r\n  AND: InitialConfig.conjunctions.AND,\r\n  OR: InitialConfig.conjunctions.OR,\r\n};\r\n\r\nconst operators: Operators = {\r\n  ...InitialConfig.operators,\r\n  // examples of  overriding\r\n  between: {\r\n    ...InitialConfig.operators.between,\r\n    textSeparators: [\r\n      \"from\",\r\n      \"to\"\r\n    ],\r\n  },\r\n};\r\n\r\nconst widgets: Widgets = {\r\n  ...InitialConfig.widgets,\r\n  // examples of  overriding\r\n  slider: {\r\n    ...InitialConfig.widgets.slider,\r\n    customProps: {\r\n      width: \"300px\"\r\n    }\r\n  },\r\n  rangeslider: {\r\n    ...InitialConfig.widgets.rangeslider,\r\n    customProps: {\r\n      width: \"300px\"\r\n    }\r\n  },\r\n  date: {\r\n    ...InitialConfig.widgets.date,\r\n    dateFormat: \"DD.MM.YYYY\",\r\n    valueFormat: \"YYYY-MM-DD\",\r\n  },\r\n  time: {\r\n    ...InitialConfig.widgets.time,\r\n    timeFormat: \"HH:mm\",\r\n    valueFormat: \"HH:mm:ss\",\r\n  },\r\n  datetime: {\r\n    ...InitialConfig.widgets.datetime,\r\n    timeFormat: \"HH:mm\",\r\n    dateFormat: \"DD.MM.YYYY\",\r\n    valueFormat: \"YYYY-MM-DD HH:mm:ss\",\r\n  },\r\n  treeselect: {\r\n    ...InitialConfig.widgets.treeselect,\r\n    customProps: {\r\n      showSearch: true\r\n    }\r\n  },\r\n};\r\n\r\n\r\nconst types: Types = {\r\n  ...InitialConfig.types,\r\n  // examples of  overriding\r\n  boolean: merge(InitialConfig.types.boolean, {\r\n    widgets: {\r\n      boolean: {\r\n        widgetProps: {\r\n          hideOperator: true,\r\n          operatorInlineLabel: \"is\",\r\n        }\r\n      },\r\n    },\r\n  }),\r\n};\r\n\r\n\r\nconst localeSettings: LocaleSettings = {\r\n  locale: {\r\n    moment: \"ru\",\r\n    antd: ru_RU,\r\n    material: ruRU,\r\n  },\r\n  valueLabel: \"Value\",\r\n  valuePlaceholder: \"Value\",\r\n  fieldLabel: \"Field\",\r\n  operatorLabel: \"Operator\",\r\n  fieldPlaceholder: \"Select field\",\r\n  operatorPlaceholder: \"Select operator\",\r\n  deleteLabel: null,\r\n  addGroupLabel: \"Add group\",\r\n  addRuleLabel: \"Add rule\",\r\n  delGroupLabel: null,\r\n  notLabel: \"Not\",\r\n  valueSourcesPopupTitle: \"Select value source\",\r\n  removeRuleConfirmOptions: {\r\n    title: \"Are you sure delete this rule?\",\r\n    okText: \"Yes\",\r\n    okType: \"danger\",\r\n  },\r\n  removeGroupConfirmOptions: {\r\n    title: \"Are you sure delete this group?\",\r\n    okText: \"Yes\",\r\n    okType: \"danger\",\r\n  },\r\n};\r\n\r\nconst settings: Settings = {\r\n  ...InitialConfig.settings,\r\n  ...localeSettings,\r\n\r\n  valueSourcesInfo: {\r\n    value: {\r\n      label: \"Value\"\r\n    },\r\n    field: {\r\n      label: \"Field\",\r\n      widget: \"field\",\r\n    },\r\n    func: {\r\n      label: \"Function\",\r\n      widget: \"func\",\r\n    }\r\n  },\r\n  // canReorder: false,\r\n  // canRegroup: false,\r\n  // showNot: false,\r\n  // showLabels: true,\r\n  maxNesting: 3,\r\n  canLeaveEmptyGroup: true, //after deletion\r\n    \r\n  // renderField: (props) => <FieldCascader {...props} />,\r\n  // renderOperator: (props) => <FieldDropdown {...props} />,\r\n  // renderFunc: (props) => <FieldSelect {...props} />,\r\n};\r\n\r\nconst funcs: Funcs = {};\r\n\r\n\r\n\r\nconst config: Config = {\r\n  conjunctions,\r\n  operators,\r\n  widgets,\r\n  types,\r\n  settings,\r\n  fields,\r\n  funcs\r\n};\r\n\r\nexport default config;\r\n\r\n","export default \r\n{\r\n  \"type\": \"group\",\r\n  \"id\": \"9a99988a-0123-4456-b89a-b1607f326fd8\",\r\n  \"children1\": {\r\n    \"a98ab9b9-cdef-4012-b456-71607f326fd9\": {\r\n      \"type\": \"rule\",\r\n      \"properties\": {\r\n        \"field\": \"user.login\",\r\n        \"operator\": \"equal\",\r\n        \"value\": [\r\n          \"batman\"\r\n        ],\r\n        \"valueSrc\": [\r\n          \"value\"\r\n        ],\r\n        \"valueType\": [\r\n          \"text\"\r\n        ]\r\n      }\r\n    },\r\n    \"98a8a9ba-0123-4456-b89a-b16e721c8cd0\": {\r\n      \"type\": \"rule\",\r\n      \"properties\": {\r\n        \"field\": \"stock\",\r\n        \"operator\": \"equal\",\r\n        \"value\": [\r\n          false\r\n        ],\r\n        \"valueSrc\": [\r\n          \"value\"\r\n        ],\r\n        \"valueType\": [\r\n          \"boolean\"\r\n        ]\r\n      }\r\n    },\r\n    \"aabbab8a-cdef-4012-b456-716e85c65e9c\": {\r\n      \"type\": \"rule\",\r\n      \"properties\": {\r\n        \"field\": \"slider\",\r\n        \"operator\": \"equal\",\r\n        \"value\": [\r\n          35\r\n        ],\r\n        \"valueSrc\": [\r\n          \"value\"\r\n        ],\r\n        \"valueType\": [\r\n          \"number\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"properties\": {\r\n    \"conjunction\": \"AND\",\r\n    \"not\": false\r\n  }\r\n};","/*eslint @typescript-eslint/no-unused-vars: [\"off\", {\"varsIgnorePattern\": \"^_\"}]*/\r\nimport React, {Component} from \"react\";\r\nimport {\r\n  Query, Builder, Utils, \r\n  //types:\r\n  ImmutableTree, Config, BuilderProps, JsonTree, JsonLogicTree\r\n} from \"react-awesome-query-builder\";\r\nimport throttle from \"lodash/throttle\";\r\nimport loadedConfig from \"./config_simple\"; // <- you can try './config' for more complex examples\r\nimport loadedInitValue from \"./init_value\";\r\nimport loadedInitLogic from \"./init_logic\";\r\nconst stringify = JSON.stringify;\r\nconst {queryBuilderFormat, jsonLogicFormat, queryString, mongodbFormat, sqlFormat, getTree, checkTree, loadTree, uuid, loadFromJsonLogic} = Utils;\r\nconst preStyle = { backgroundColor: \"darkgrey\", margin: \"10px\", padding: \"10px\" };\r\nconst preErrorStyle = { backgroundColor: \"lightpink\", margin: \"10px\", padding: \"10px\" };\r\n\r\nconst emptyInitValue: JsonTree = {\"id\": uuid(), \"type\": \"group\"};\r\n\r\n// get init value in JsonTree format:\r\nconst initValue: JsonTree = loadedInitValue && Object.keys(loadedInitValue).length > 0 ? loadedInitValue as JsonTree : emptyInitValue;\r\nconst initTree: ImmutableTree = checkTree(loadTree(initValue), loadedConfig);\r\n\r\n// -OR- alternativaly get init value in JsonLogic format:\r\n//const initLogic: JsonLogicTree = loadedInitLogic && Object.keys(loadedInitLogic).length > 0 ? loadedInitLogic : undefined;\r\n//const initTree: ImmutableTree = checkTree(loadFromJsonLogic(initLogic, loadedConfig), loadedConfig);\r\n\r\n\r\ninterface DemoQueryBuilderState {\r\n  tree: ImmutableTree;\r\n  config: Config;\r\n}\r\n\r\nexport default class DemoQueryBuilder extends Component<{}, DemoQueryBuilderState> {\r\n    private immutableTree: ImmutableTree;\r\n    private config: Config;\r\n    \r\n    state = {\r\n      tree: initTree,\r\n      config: loadedConfig\r\n    };\r\n\r\n    render = () => (\r\n      <div>\r\n        <Query \r\n          {...loadedConfig} \r\n          value={this.state.tree}\r\n          onChange={this.onChange}\r\n          renderBuilder={this.renderBuilder}\r\n        />\r\n\r\n        <button onClick={this.resetValue}>reset</button>\r\n        <button onClick={this.clearValue}>clear</button>\r\n\r\n        <div className=\"query-builder-result\">\r\n          {this.renderResult(this.state)}\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n    resetValue = () => {\r\n      this.setState({\r\n        tree: initTree, \r\n      });\r\n    };\r\n\r\n    clearValue = () => {\r\n      this.setState({\r\n        tree: loadTree(emptyInitValue), \r\n      });\r\n    };\r\n\r\n    renderBuilder = (props: BuilderProps) => (\r\n      <div className=\"query-builder-container\" style={{padding: \"10px\"}}>\r\n        <div className=\"query-builder qb-lite\">\r\n          <Builder {...props} />\r\n        </div>\r\n      </div>\r\n    )\r\n    \r\n    onChange = (immutableTree: ImmutableTree, config: Config) => {\r\n      this.immutableTree = immutableTree;\r\n      this.config = config;\r\n      this.updateResult();\r\n\r\n      // `jsonTree` or `logic` can be saved to backend\r\n      // (and then loaded with `loadTree` or `loadFromJsonLogic` as seen above)\r\n      const jsonTree = getTree(immutableTree);\r\n      const {logic, data, errors} = jsonLogicFormat(immutableTree, config);\r\n    }\r\n\r\n    updateResult = throttle(() => {\r\n      this.setState({tree: this.immutableTree, config: this.config});\r\n    }, 100)\r\n\r\n    renderResult = ({tree: immutableTree, config} : {tree: ImmutableTree, config: Config}) => {\r\n      const {logic, data, errors} = jsonLogicFormat(immutableTree, config);\r\n      return (\r\n        <div>\r\n          <br />\r\n          <div>\r\n          stringFormat: \r\n            <pre style={preStyle}>\r\n              {stringify(queryString(immutableTree, config), undefined, 2)}\r\n            </pre>\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n          humanStringFormat: \r\n            <pre style={preStyle}>\r\n              {stringify(queryString(immutableTree, config, true), undefined, 2)}\r\n            </pre>\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n          sqlFormat: \r\n            <pre style={preStyle}>\r\n              {stringify(sqlFormat(immutableTree, config), undefined, 2)}\r\n            </pre>\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n          mongodbFormat: \r\n            <pre style={preStyle}>\r\n              {stringify(mongodbFormat(immutableTree, config), undefined, 2)}\r\n            </pre>\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n            <a href=\"http://jsonlogic.com/play.html\" target=\"_blank\" rel=\"noopener noreferrer\">jsonLogicFormat</a>: \r\n            { errors.length > 0 \r\n              && <pre style={preErrorStyle}>\r\n                {stringify(errors, undefined, 2)}\r\n              </pre> \r\n            }\r\n            { !!logic\r\n              && <pre style={preStyle}>\r\n                {\"// Rule\"}:<br />\r\n                {stringify(logic, undefined, 2)}\r\n                <br />\r\n                <hr />\r\n                {\"// Data\"}:<br />\r\n                {stringify(data, undefined, 2)}\r\n              </pre>\r\n            }\r\n          </div>\r\n          <hr/>\r\n          <div>\r\n          Tree: \r\n            <pre style={preStyle}>\r\n              {stringify(getTree(immutableTree), undefined, 2)}\r\n            </pre>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Demo from \"./demo/demo\";\r\n\r\n// import 'react-awesome-query-builder/css/antd.less'; // need to enable LESS loader\r\nimport \"antd/dist/antd.css\";\r\nimport \"react-awesome-query-builder/lib/css/styles.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Demo />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n\r\n"],"sourceRoot":""}